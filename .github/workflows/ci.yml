name: CI Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repo
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: ./app/package-lock.json

      # Step 3: Install dependencies
      - name: Install dependencies
        working-directory: ./app
        run: npm ci

      # Step 4: SonarCloud scan
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: ./app
          args: >
            -Dsonar.organization=olatunbosunibiyinka
            -Dsonar.projectKey=OlatunbosunIbiyinka_Olatunbosun-portfolio-project
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Step 5: Build Docker image
      - name: Build Docker image
        run: docker build -t ola-portfolio-app:latest ./app

      # Step 6: Log in to ACR
      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: olaacr01.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # Step 7: Tag and push Docker image to ACR
      - name: Tag and push Docker image
        run: |
          docker tag ola-portfolio-app:latest olaacr01.azurecr.io/ola-portfolio-app:latest
          docker push olaacr01.azurecr.io/ola-portfolio-app:latest

      # Step 8: Run Trivy vulnerability scanner
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "olaacr01.azurecr.io/ola-portfolio-app:latest"
          format: "table"
          exit-code: "0"
          ignore-unfixed: true
